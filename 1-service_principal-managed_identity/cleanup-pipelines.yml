name: 'Decommission-Pipeline $(Date:yyyy-MM-dd)_v$(Rev:rr)'

trigger: none

pr: none

variables:
- group: 'service-connection'
- group: 'my_publicIP'
- name: system.debug
  value: 'true'
- name: RGName
  value: "rg-ADO-2"            
- name: StorageAccName
  value: "mystorageacct16425"  
- name: ContainerName
  value: "storage-container"         
- name: ADO_Environment
  value: "Staging"
- name: Pipeline_Agent
  value: 'My Agents'
- name: stateFile
  value: 'spn.tfstate'
- name: TerraformDirectory
  value: '1-service_principal-managed_identity'

stages:
- stage: 'Destroy_Resources' 
  displayName: 'Destroy resoures'
  pool: $(Pipeline_Agent)
  
  jobs:
  - job:
    workspace:
      clean: all
    steps:
    - checkout: self
      clean: true
      
    - template: 'pipeline_templates/installs.yml'

    - bash: |
        set -exo pipefail
        terraform init -upgrade -reconfigure -input=false -lock=false \
          -backend-config="resource_group_name=$(RGName)" \
          -backend-config="storage_account_name=$(StorageAccName)" \
          -backend-config="container_name=$(ContainerName)" \
          -backend-config="key=$(stateFile)" \
          -backend-config="use_azuread_auth=true"
        terraform destroy -auto-approve -input=false '-lock-timeout=1m' \
          '-var-file=terraform.tfvars'
        terraform state list -state='$(stateFile)'
      env:
        ARM_CLIENT_ID: $(SPN2-client-id)
        ARM_TENANT_ID: $(SPN2-tenant-id)
        ARM_CLIENT_SECRET: $(SPN2-client-secret)
        ARM_SUBSCRIPTION_ID: $(SPN2-subscription-id)
        TF_VAR_my_publicIP: $(my_publicIP)
      workingDirectory: $(TerraformDirectory)
      displayName: 'terraform destroy'